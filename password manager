import tkinter as tk
from tkinter import messagebox
import json
from cryptography.fernet import Fernet

# Generate a key and encrypt/decrypt passwords with it
def generate_key():
    return Fernet.generate_key()

# Save the key in a file for later use
def save_key(key):
    with open("key.key", "wb") as key_file:
        key_file.write(key)

# Load the key from a file
def load_key():
    try:
        with open("key.key", "rb") as key_file:
            return key_file.read()
    except FileNotFoundError:
        return None

# Encrypt the password
def encrypt_password(password, key):
    f = Fernet(key)
    return f.encrypt(password.encode()).decode()

# Decrypt the password
def decrypt_password(encrypted_password, key):
    f = Fernet(key)
    return f.decrypt(encrypted_password.encode()).decode()

# Save the password to a JSON file
def save_password():
    website = website_entry.get()
    password = password_entry.get()

    if website and password:
        key = load_key()

        # If key doesn't exist, generate and save it
        if key is None:
            key = generate_key()
            save_key(key)

        encrypted_password = encrypt_password(password, key)

        # Load existing data and add the new password
        try:
            with open("passwords.json", "r") as f:
                passwords = json.load(f)
        except (FileNotFoundError, json.JSONDecodeError):
            passwords = {}

        passwords[website] = encrypted_password

        # Save back to the file
        with open("passwords.json", "w") as f:
            json.dump(passwords, f, indent=4)

        messagebox.showinfo("Success", f"Password for {website} saved!")
        website_entry.delete(0, tk.END)
        password_entry.delete(0, tk.END)
    else:
        messagebox.showwarning("Input Error", "Please fill out both fields.")

# Retrieve the password for a website
def retrieve_password():
    website = website_entry.get()

    if website:
        try:
            with open("passwords.json", "r") as f:
                passwords = json.load(f)

            encrypted_password = passwords.get(website)

            if encrypted_password:
                key = load_key()
                if key:
                    decrypted_password = decrypt_password(encrypted_password, key)
                    messagebox.showinfo("Password Found", f"Password for {website}: {decrypted_password}")
                else:
                    messagebox.showerror("Error", "Encryption key not found.")
            else:
                messagebox.showwarning("Not Found", f"No password found for {website}")
        except (FileNotFoundError, json.JSONDecodeError):
            messagebox.showerror("Error", "No saved passwords found.")
    else:
        messagebox.showwarning("Input Error", "Please enter a website.")

# Set up the GUI
root = tk.Tk()
root.title("Password Manager")

# Website input
website_label = tk.Label(root, text="Website:")
website_label.grid(row=0, column=0)
website_entry = tk.Entry(root, width=35)
website_entry.grid(row=0, column=1)

# Password input
password_label = tk.Label(root, text="Password:")
password_label.grid(row=1, column=0)
password_entry = tk.Entry(root, width=35)
password_entry.grid(row=1, column=1)

# Buttons
save_button = tk.Button(root, text="Save Password", width=20, command=save_password)
save_button.grid(row=2, column=0, columnspan=2)

retrieve_button = tk.Button(root, text="Retrieve Password", width=20, command=retrieve_password)
retrieve_button.grid(row=3, column=0, columnspan=2)

# Run the application
root.mainloop()
